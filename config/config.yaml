# GOFRAME CONFIG
server:
  # 基本配置
  name: "websocket"                    # 服务名称
  address: ":5818"                     # 本地监听地址
  httpsAddr:                           # TLS/HTTPS配置，同时需要配置证书和密钥。默认为空，表示关闭
  httpsCertPath:                       # TLS/HTTPS证书文件本地路径，建议使用绝对路径。默认为空，表示关闭
  httpsKeyPath:                        # TLS/HTTPS密钥文件本地路径，建议使用绝对路径。默认为空，表示关闭
  readTimeout: "60s"                   # 请求读取超时时间，一般不需要配置。默认为60秒
  writeTimeout: 0                      # 数据返回写入超时时间，一般不需要配置。默认为0，表示不超时
  idleTimeout: "60s"                   # 仅当Keep-Alive开启时有效，请求闲置时间。默认为60秒
  maxHeaderBytes: 10240                # 请求Header大小限制。默认为10240 byte
  keepAlive: true                      # 是否开启Keep-Alive功能。默认true
  serverAgent: "Go Websocket Server"   # 服务端Agent信息。默认为"GoFrame HTTP Server"

  # cookie配置
  cookieMaxAge: "365d"                 # cookie有效期。默认为365天
  cookiePath: "/"                      # cookie有效路径。默认为"/"，表示全站所有路径下有效
  cookieDomain:                        # cookie有效域名。默认为空，表示当前配置cookie时的域名
  cookieSameSite:                      # cookie sameSite设置。默认为空，表示不设置
  cookieSecure: false                  # cookie secure设置。默认为false，表示不设置
  cookieHttpOnly: false                # cookie httpOnly设置。默认为false，表示不设置

  # session配置
  sessionIdName: "gsessionid"          # session id的键名名称。默认为"gfsessionid"
  sessionMaxAge: "24h"                 # session有效期。默认为24小时
  sessionPath: "/tmp/gsessions"        # session存储的文件目录路径。默认为当前系统临时目录下的gsessions目录
  sessionCookieMaxAge: "24h"           # session cookie有效期。默认为24小时
  sessionCookieOutput: true            # session特性开启时，是否将session id返回到cookie中。默认true

  # 日志基本配置
  logPath:                             # 日志文件存储目录路径，建议使用绝对路径。默认为空，表示关闭
  logLevel: "all"                      # 日志输出级别。默认为"all"，表示全部级别
  logStdout: true                      # 日志是否输出到终端。默认为true
  errorStack: true                     # 当server捕获到异常时是否记录堆栈信息到日志中。默认为true
  errorLogEnabled: true                # 是否记录异常日志信息到日志中。默认为true
  errorLogPattern: "error-{Ymd}.log"   # 异常错误日志文件格式。默认为"error-{Ymd}.log"
  accessLogEnabled: false              # 是否记录访问日志。默认为false
  accessLogPattern: "access-{Ymd}.log" # 访问日志文件格式。默认为"access-{Ymd}.log"

  # 日志扩展配置
  logger:
    flags: 41                          # 日志特性的额外标志。默认为F_TIME_DATE | F_TIME_MILLI
    path:                              # 日志文件路径。默认为空，表示关闭
    file: "{Ymd}.log"                  # 日志文件格式。默认为"{Y-m-d}.log"
    level: "all"                       # 日志输出级别。默认为"all"，表示全部级别
    prefix:                            # 日志内容输出前缀。默认为空
    ctxKeys: []                        # 自定义context上下文变量名称，自动打印context的变量到日志中。默认为空
    header: true                       # 是否打印日志的头信息。默认true
    stdout: true                       # 日志是否同时输出到终端。默认true
    rotateSize: "20M"                  # 按照日志文件大小对文件进行滚动切分。默认为0，表示关闭
    rotateExpire: 0                    # 按照日志文件时间间隔对文件滚动切分。默认为0，表示关闭
    rotateBackupLimit: 3               # 按照切分的文件数量清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，删除切分
    rotateBackupExpire: "15d"          # 按照切分的文件有效期清理切分文件，当滚动切分特性开启时有效。默认为0，表示不备份，删除切分
    rotateBackupCompress: 0            # 滚动切分文件的压缩比0至9。默认为0，表示不压缩
    rotateCheckInterval: "1h"          # 滚动切分的时间检测间隔，一般不需要设置。默认为1小时
    stdoutColorDisabled: false         # 关闭终端的颜色打印。默认为true
    writerColorEnable: false           # 日志文件是否带上颜色。默认false

  # pprof配置
  pprofEnabled: false                  # 是否开启pprof性能调试特性。默认为false
  pprofPattern: "/debug/pprof"         # pprof特性的页面访问路径，开启pprof时有效。默认为"/debug/pprof"

  # openapi文档配置
  openapiPath:                         # openapi接口文档地址
  swaggerPath:                         # swagger地址

  # 其他配置
  clientMaxBodySize: 810241024         # 客户端最大Body上传限制大小，影响文件上传大小。默认为810241024 byte
  formParsingMemory: 1048576           # 解析表单时的缓冲区大小，一般不需要配置。默认为1048576 byte
  nameToUriType: 3                     # 路由注册中使用对象注册时的路由生成规则。默认为0
  routeOverWrite: false                # 当遇到重复路由注册时是否强制覆盖。默认为false，表示重复路由存在时将会在启动时报错退出
  dumpRouterMap: true                  # 是否在server启动时打印所有的路由列表。默认为true
  graceful: false                      # 是否开启平滑重启特性，开启时将会在本地增加10000的本地TCP端口用于进程间通信。默认false
  gracefulTimeout: 2                   # 父进程在平滑重启后多少秒退出，若请求耗时大于该值，可能会导致请求中断。默认2秒
